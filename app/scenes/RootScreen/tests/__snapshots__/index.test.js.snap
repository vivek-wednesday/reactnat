// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HomeScreen /> container should render and match the snapshot 1`] = `
<View
  style={
    Array [
      Object {
        "display": "flex",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
  testID="root-screen"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
                "open": Object {
                  "animation": "spring",
                  "config": Object {
                    "damping": 500,
                    "mass": 3,
                    "overshootClamping": true,
                    "restDisplacementThreshold": 10,
                    "restSpeedThreshold": 10,
                    "stiffness": 1000,
                  },
                },
              }
            }
          >
            <View
              needsOffscreenAlphaCompositing={false}
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "transform": Array [
                      Object {
                        "translateX": 0,
                      },
                      Object {
                        "translateX": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "shadowColor": "#000",
                      "shadowOffset": Object {
                        "height": 1,
                        "width": -1,
                      },
                      "shadowOpacity": 0.3,
                      "shadowRadius": 5,
                      "top": 0,
                      "width": 3,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RCTSafeAreaView
                        emulateUnlessSupported={true}
                        testID="container"
                      >
                        <View
                          style={
                            Object {
                              "maxHeight": 1334,
                              "padding": 10,
                            }
                          }
                          testID="example-container-content"
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                },
                              ]
                            }
                          >
                            <TextInput
                              allowFontScaling={true}
                              onChangeText={[Function]}
                              rejectResponderTermination={true}
                              style={
                                Array [
                                  Object {
                                    "borderRadius": 20,
                                    "borderWidth": 1,
                                    "flexBasis": 0,
                                    "flexGrow": 1,
                                    "flexShrink": 1,
                                    "marginRight": 10,
                                    "paddingBottom": 10,
                                    "paddingLeft": 10,
                                    "paddingRight": 10,
                                    "paddingTop": 10,
                                  },
                                ]
                              }
                              underlineColorAndroid="transparent"
                            />
                            <View
                              accessibilityRole="button"
                              accessibilityState={Object {}}
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Array [
                                    Object {},
                                  ]
                                }
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "color": "#007AFF",
                                        "fontSize": 18,
                                        "margin": 8,
                                        "textAlign": "center",
                                      },
                                    ]
                                  }
                                >
                                  Search
                                </Text>
                              </View>
                            </View>
                          </View>
                          <RCTScrollView
                            style={
                              Object {
                                "height": 1067.2,
                                "marginTop": 20,
                              }
                            }
                          >
                            <View>
                              <Text
                                testID="wait"
                              >
                                <ActivityIndicator
                                  animating={true}
                                  color="#999999"
                                  hidesWhenStopped={true}
                                  size="small"
                                  testId="loader"
                                />
                              </Text>
                            </View>
                          </RCTScrollView>
                        </View>
                      </RCTSafeAreaView>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
    </RNCSafeAreaProvider>
  </View>
</View>
`;
